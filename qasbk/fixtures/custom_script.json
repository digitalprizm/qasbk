[
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Quotation", 
  "modified": "2017-09-22 17:06:26.247673", 
  "name": "Quotation-Client", 
  "script": "\ncur_frm.add_fetch('item_code','net_weight','net_weight');\ncur_frm.add_fetch('item_code','weight_uom','weight_uom');\ncur_frm.add_fetch('item_code','hs_code','hs_code');\ncur_frm.add_fetch('customer','sales_person','sales_person');\ncur_frm.add_fetch('customer','owner','customer_owner');\n\nDate.prototype.getMonthName = function(lang) {\n    lang = lang && (lang in Date.locale) ? lang : 'en';\n    return Date.locale[lang].month_names[this.getMonth()];\n};\n\nDate.prototype.getMonthNameShort = function(lang) {\n    lang = lang && (lang in Date.locale) ? lang : 'en';\n    return Date.locale[lang].month_names_short[this.getMonth()];\n};\n\nDate.locale = {\n    en: {\n       month_names: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n       month_names_short: ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC']\n    }\n};\n\nfrappe.ui.form.on(\"Quotation\", \"validate\", function(frm) {\n\tabbr_series = 'aa'\n\tfrappe.call({\n\t        method: \"frappe.client.get_value\",\n                async:false,\n\t        args: {\n\t            doctype: \"Company\",\n\t            fieldname: \"abbr_series\",\n\t            filters: { name: cur_frm.doc.company },\n\t        },\n\t       \tcallback: function(res){\n\t          \tif (res && res.message){\n\t\t\t\t\t\tabbr_series=res.message['abbr_series']\n                          \n\t           \t}\n\t       \t}  \t\n\t    });\n\tvar ymd = frm.doc.transaction_date;\n\tvar yy = ymd.substring(2,4);\n\tvar mm = ymd.substring(5,7);\n\tvar d = new Date(cur_frm.doc.transaction_date)\n\tvar ym = \"CT\"+abbr_series+\"QTN\"+yy+ d.getMonthNameShort() + \"-.###\";\n\tfrm.set_value(\"naming_series\", ym);\n})\n\ncur_frm.cscript.quantity_in_kg = function(doc, cdt, cdn) {\n    var item = frappe.get_doc(cdt, cdn);\n    var qty = item.net_weight ? (flt(item.quantity_in_kg)/1000) * flt(item.net_weight) : (flt(item.quantity_in_kg)/1000) * flt(1);\n    frappe.model.set_value(cdt, cdn, \"qty\", qty);\n};\ncur_frm.cscript.rate_per_kg = function(doc, cdt, cdn) {\n    var item = frappe.get_doc(cdt, cdn);\n    var rate = item.rate_per_kg * 1000;\n    frappe.model.set_value(cdt, cdn, \"rate\", rate);\n}\n\nfrappe.views.CommunicationComposer =  frappe.views.CommunicationComposer.extend({\n    make_fun: function(){\n        var me = this;\n        var content_field = me.dialog.fields_dict.content;\n        var subject_field = me.dialog.fields_dict.subject; \n        var recipients_field = me.dialog.fields_dict.recipients; \n        var sub = me.dialog.fields_dict.subject.get_value();\n        var rec = me.dialog.fields_dict.recipients.get_value();\n        var custom_rec=\"\";\n        var email_list=[];\n        var email_string=\"\"\n        frappe.call({\n                   method: \"frappe.client.get_list\",\n                   async: false,\n                   args: {\n                       doctype: \"Contact\",\n                       fields: [\"email_id\"],\n                       filters: { 'customer': cur_frm.doc.customer },\n                   },\n                      callback: function(res){\n                         if (res && res.message){\n                              console.log( res.message);\n\n                              $.each(res.message,function(i,d){\n                                   if(d[\"email_id\"]){\n                                     email_list.push(d[\"email_id\"])\n                                     email_string=String(email_string)+String(d[\"email_id\"])+String(\";\")\n                                    }\n                               });\n                               console.log(\"email list1\",email_list)\n                          }\n                      }     \n        });\n        recipients_field.set_input(email_string)\n         // content_field.set_input(\"<br><b>\"+cur_frm.doc.name+ \"<br>\"+cur_frm.doc.transaction_date+\"</b><br><br>To,<br> \"+cur_frm.doc.customer_name+\"<br>\"+cur_frm.doc.address_display+ \"<br><b>KIND ATTN: \"+cur_frm.doc.contact_display+\"</b><br><br>\"+cur_frm.doc.response);\n        subject_field.set_input(\"ChemTech\"+\" - \"+sub);\n        var email_content = \"\"\n        email_content = \"<br>\"+\"Hello  \"+cur_frm.doc.customer_name+\",\"+\"<br>\"\n        email_content += \"<br>Your quotation is attached for: \"\n         for (var i in cur_frm.doc.items) {\n            var item = cur_frm.doc.items[i].item_code;\n            email_content += \"<br>\" + (parseInt(i)+1) +\". \" + cur_frm.doc.items[i][\"item_code\"]\n            console.log(cur_frm.doc.items[i][\"item_code\"]);\n            }  \n        email_content +=\"<br><br>Thank you for the enquiry.<br>\\ Kindly find the attached quotation herewith. Hope to hear from you soon.\"+\"<br><br><br><br><br>\"+\n         \"<br><img alt=' height='66' src='/files/C1ZkJ4i.png' width='146'>\\\n      <p>&nbsp;&nbsp;&nbsp; Trading &amp; Contracting</p>\\\n       <p>&nbsp;&nbsp;&nbsp; <a name='www.chemma.com'>www.chemma.com</a></p>\"\n        content_field.set_input(email_content);    \n         \n\n\n    },\n    make: function(){\n        this._super();\n        this.make_fun();\n    }\n});\n/// Add Interaction\n\nfrappe.ui.form.on(\"Quotation\", \"refresh\", function(frm, doctype, name) {\ncur_frm.add_custom_button(__('Add Interaction'), function() {\nvar d = frappe.prompt([\n    {'fieldname': 'person_interacted_with', 'fieldtype': 'Data', 'label': 'Person Interacted with', 'reqd': 0},    \n    {label:__(\"Type of Interaction\"), fieldtype:\"Select\",'default': \"Follow Up Call\",\n                    options: [\"Cold Call\",\"Follow Up Call\",\"Mail\",\"Cold Visit\",\"Follow Up Visit\",\"Existing Customer Visit\",\"SMS or Whatsapp\",\"Skype or Webex\"],\n                    fieldname:\"type_of_interaction\"},\n    {label:__(\"Result\"), fieldtype:\"Select\", options: \n    [\"Status Quo\",\"Warmer\",\"Colder\",\"Closed Lost\",\"Closed Won\"], fieldname:\"result\"},\n    {'fieldname': 'responsible', 'fieldtype': 'Link', options:\"User\", 'default': user, 'label': 'Responsible', 'reqd': 0},\n    {'fieldname': 'create_task', 'fieldtype': 'Check', 'default': true, 'label': 'Create Task'},\n    {fieldtype: \"Column Break\"},\n\n    {'fieldname': 'next_date', 'fieldtype': 'Date', \n    'label': 'Next Action Date', 'default': frappe.datetime.add_days(frappe.datetime.nowdate(),7), 'reqd': 0},\n    {'fieldname': 'next_action_by', 'fieldtype': 'Link', options:\"User\", 'default': user,'label': 'Next Action By', 'reqd': 0},\n    {'fieldname': 'comment', 'fieldtype': 'Text', 'label': 'Next Action Task', 'reqd': 1},\n    {fieldtype: \"Section Break\"},\n\n    {'fieldname': 'remarks', 'fieldtype': 'Text Editor', 'label': 'Remarks', 'reqd': 1} \n\n\n],\nfunction(values){\n    var c = d.get_values()\n    var cmnt = \"Person Interacted with: \"+ c.person_interacted_with\n               +\"<br>Type of Interaction: \"+ c.type_of_interaction\n               +\"<br>Result: \"+ c.result \n               +\"<br>Next Action Date: \" +c.next_date \n               +\"<br>Next Action By: \"+ c.next_action_by \n               + \"<br>Next Action Task: \"+c.comment \n               + \"<br>Responsible: \"+c.responsible \n               + \"<br>Remarks: \"+c.remarks\n\n                \n    var me = frm.doc\n    // start interaction master\n       frappe.call({\n            method: \"shopchemical.custom_methods.add_interaction\",\n            args: {\n                doc:{\n                    doctype: \"Interaction Master\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    result: c.result,\n                    person_interacted_with: c.person_interacted_with,\n\n     //                responce_reson: c.responce_reson,\n                    next_action_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    // result: c.result,\n                    next_action_by: c.next_action_by,\n                    next_action_task: c.comment,\n                    remakrs: c.remarks,\n                    responsible: c.responsible\n                    // next_date\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction master record created\");\n            }\n        });\n    //end interaction master\n//create todo\nconsole.log(c.create_task);\n    if(c.create_task==true){\n        frappe.call({\n                        method: \"shopchemical.custom_methods.create_todo\",\n                        args: {\n                            owner: c.next_action_by,\n                            assigned_by: c.responsible,\n                            description: c.comment,\n                            date: c.next_date,\n                            reference_name: frm.doc.name,\n                            reference_type: frm.doc.doctype\n                        }\n                    })\n    }\n//end of create todo\n\n    return frappe.call({\n            method: \"frappe.desk.form.utils.add_comment\",\n            args: {\n                doc:{\n                    doctype: \"Communication\",\n                    communication_type: \"Comment\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    comment: \"cmnt\",\n                    subject: \"cmnt\",\n                    content: cmnt,\n                    responce_reson: c.responce_reson,\n                    next_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    result: c.result,\n                    next_action_by: c.next_action_by,\n                    reference_owner: frm.doc.owner,\n                    comment_by: user,\n                    user: user,\n                    sender_full_name:user_fullname,\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction Submited Successfully\");\n                        cur_frm.reload_doc();\n            if (cur_frm) {\n                        if (cur_frm.docname && (frappe.last_edited_communication[cur_frm.doctype] || {})[cur_frm.docname]) {\n                            delete frappe.last_edited_communication[cur_frm.doctype][cur_frm.docname];\n                        }\n                    }\n            }\n        });\n},\n'Add Interaction',\n'Submit','Add Interaction', \"btn-default\"\n)\n});\n\n                        // frm.refresh();\n\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Sales Order", 
  "modified": "2017-04-10 09:48:44.076157", 
  "name": "Sales Order-Client", 
  "script": "cur_frm.add_fetch('customer','sales_person','sales_person');\ncur_frm.add_fetch('item_code','hs_code','hs_code');\ncur_frm.add_fetch('customer','owner','customer_owner')\n\n\nDate.prototype.getMonthName = function(lang) {\n    lang = lang && (lang in Date.locale) ? lang : 'en';\n    return Date.locale[lang].month_names[this.getMonth()];\n};\n\nDate.prototype.getMonthNameShort = function(lang) {\n    lang = lang && (lang in Date.locale) ? lang : 'en';\n    return Date.locale[lang].month_names_short[this.getMonth()];\n};\n\nDate.locale = {\n    en: {\n       month_names: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n       month_names_short: ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC']\n    }\n};\n\nfrappe.ui.form.on(\"Sales Order\", \"validate\", function(frm) {\n\tabbr_series = 'aa'\n\tfrappe.call({\n\t        method: \"frappe.client.get_value\",\n                async:false,\n\t        args: {\n\t            doctype: \"Company\",\n\t            fieldname: \"abbr_series\",\n\t            filters: { name: cur_frm.doc.company },\n\t        },\n\t       \tcallback: function(res){\n\t          \tif (res && res.message){\n\t\t\t\t\t\tabbr_series=res.message['abbr_series']\n                          \n\t           \t}\n\t       \t}  \t\n\t    });\n\tvar ymd = frm.doc.transaction_date;\n\tvar yy = ymd.substring(2,4);\n\tvar mm = ymd.substring(5,7);\n\tvar d = new Date(cur_frm.doc.transaction_date)\n\tvar ym = \"CT\"+abbr_series+\"SO\"+yy+ d.getMonthNameShort() + \"-.###\";\n\tfrm.set_value(\"naming_series\", ym);\n})\n\n//Add Interaction\nfrappe.ui.form.on(\"Sales Order\", \"refresh\", function(frm, doctype, name) {\ncur_frm.add_custom_button(__('Add Interaction'), function() {\nvar d = frappe.prompt([\n    {'fieldname': 'person_interacted_with', 'fieldtype': 'Data', 'label': 'Person Interacted with', 'reqd': 0},    \n    {label:__(\"Type of Interaction\"), fieldtype:\"Select\",'default': \"Follow Up Call\",\n                    options: [\"Cold Call\",\"Follow Up Call\",\"Mail\",\"Cold Visit\",\"Follow Up Visit\",\"Existing Customer Visit\",\"SMS or Whatsapp\",\"Skype or Webex\"],\n                    fieldname:\"type_of_interaction\"},\n    {label:__(\"Result\"), fieldtype:\"Select\", options: \n    [\"Status Quo\",\"Warmer\",\"Colder\",\"Closed Lost\",\"Closed Won\"], fieldname:\"result\"},\n    {'fieldname': 'responsible', 'fieldtype': 'Link', options:\"User\", 'default': user, 'label': 'Responsible', 'reqd': 0},\n    {'fieldname': 'create_task', 'fieldtype': 'Check', 'default': true, 'label': 'Create Task'},\n    {fieldtype: \"Column Break\"},\n\n    {'fieldname': 'next_date', 'fieldtype': 'Date', \n    'label': 'Next Action Date', 'default': frappe.datetime.add_days(frappe.datetime.nowdate(),7), 'reqd': 0},\n    {'fieldname': 'next_action_by', 'fieldtype': 'Link', options:\"User\", 'default': user,'label': 'Next Action By', 'reqd': 0},\n    {'fieldname': 'comment', 'fieldtype': 'Text', 'label': 'Next Action Task', 'reqd': 1},\n    {fieldtype: \"Section Break\"},\n\n    {'fieldname': 'remarks', 'fieldtype': 'Text Editor', 'label': 'Remarks', 'reqd': 1} \n\n\n],\nfunction(values){\n    var c = d.get_values()\n    var cmnt = \"Person Interacted with: \"+ c.person_interacted_with\n               +\"<br>Type of Interaction: \"+ c.type_of_interaction\n               +\"<br>Result: \"+ c.result \n               +\"<br>Next Action Date: \" +c.next_date \n               +\"<br>Next Action By: \"+ c.next_action_by \n               + \"<br>Next Action Task: \"+c.comment \n               + \"<br>Responsible: \"+c.responsible \n               + \"<br>Remarks: \"+c.remarks\n\n                \n    var me = frm.doc\n    // start interaction master\n       frappe.call({\n            method: \"shopchemical.custom_methods.add_interaction\",\n            args: {\n                doc:{\n                    doctype: \"Interaction Master\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    result: c.result,\n                    person_interacted_with: c.person_interacted_with,\n\n     //                responce_reson: c.responce_reson,\n                    next_action_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    // result: c.result,\n                    next_action_by: c.next_action_by,\n                    next_action_task: c.comment,\n                    remakrs: c.remarks,\n                    responsible: c.responsible\n                    // next_date\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction master record created\");\n            }\n        });\n    //end interaction master\n//create todo\nconsole.log(c.create_task);\n    if(c.create_task==true){\n        frappe.call({\n                        method: \"shopchemical.custom_methods.create_todo\",\n                        args: {\n                            owner: c.next_action_by,\n                            assigned_by: c.responsible,\n                            description: c.comment,\n                            date: c.next_date,\n                            reference_name: frm.doc.name,\n                            reference_type: frm.doc.doctype\n                        }\n                    })\n    }\n//end of create todo\n\n    return frappe.call({\n            method: \"frappe.desk.form.utils.add_comment\",\n            args: {\n                doc:{\n                    doctype: \"Communication\",\n                    communication_type: \"Comment\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    comment: \"cmnt\",\n                    subject: \"cmnt\",\n                    content: cmnt,\n                    responce_reson: c.responce_reson,\n                    next_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    result: c.result,\n                    next_action_by: c.next_action_by,\n                    reference_owner: frm.doc.owner,\n                    comment_by: user,\n                    user: user,\n                    sender_full_name:user_fullname,\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction Submited Successfully\");\n                        cur_frm.reload_doc();\n            if (cur_frm) {\n                        if (cur_frm.docname && (frappe.last_edited_communication[cur_frm.doctype] || {})[cur_frm.docname]) {\n                            delete frappe.last_edited_communication[cur_frm.doctype][cur_frm.docname];\n                        }\n                    }\n            }\n        });\n},\n'Add Interaction',\n'Submit','Add Interaction', \"btn-default\"\n)\n});\n\n                        // frm.refresh();\n\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Sales Invoice", 
  "modified": "2017-04-10 09:47:41.967301", 
  "name": "Sales Invoice-Client", 
  "script": "cur_frm.add_fetch('customer','sales_person','sales_person');\ncur_frm.add_fetch('item_code','hs_code','hs_code');\ncur_frm.add_fetch('customer','owner','customer_owner');\n\n\nDate.prototype.getMonthName = function(lang) {\n    lang = lang && (lang in Date.locale) ? lang : 'en';\n    return Date.locale[lang].month_names[this.getMonth()];\n};\n\nDate.prototype.getMonthNameShort = function(lang) {\n    lang = lang && (lang in Date.locale) ? lang : 'en';\n    return Date.locale[lang].month_names_short[this.getMonth()];\n};\n\nDate.locale = {\n    en: {\n       month_names: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n       month_names_short: ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC']\n    }\n};\n\nfrappe.ui.form.on(\"Sales Invoice\", \"validate\", function(frm) {\n\tabbr_series = 'aa'\n\tfrappe.call({\n\t        method: \"frappe.client.get_value\",\n                async:false,\n\t        args: {\n\t            doctype: \"Company\",\n\t            fieldname: \"abbr_series\",\n\t            filters: { name: cur_frm.doc.company },\n\t        },\n\t       \tcallback: function(res){\n\t          \tif (res && res.message){\n\t\t\t\t\t\tabbr_series=res.message['abbr_series']\n                          \n\t           \t}\n\t       \t}  \t\n\t    });\n\tvar ymd = frm.doc.posting_date;\n\tvar yy = ymd.substring(2,4);\n\tvar mm = ymd.substring(5,7);\n\tvar d = new Date(cur_frm.doc.posting_date)\n\tvar ym = \"CT\"+abbr_series+\"SINV\"+yy+ d.getMonthNameShort() + \"-.###\";\n\tfrm.set_value(\"naming_series\", ym);\n})\n\n////Add Interaction\n\nfrappe.ui.form.on(\"Sales Invoice\", \"refresh\", function(frm, doctype, name) {\ncur_frm.add_custom_button(__('Add Interaction'), function() {\nvar d = frappe.prompt([\n    {'fieldname': 'person_interacted_with', 'fieldtype': 'Data', 'label': 'Person Interacted with', 'reqd': 0},    \n    {label:__(\"Type of Interaction\"), fieldtype:\"Select\",'default': \"Follow Up Call\",\n                    options: [\"Cold Call\",\"Follow Up Call\",\"Mail\",\"Cold Visit\",\"Follow Up Visit\",\"Existing Customer Visit\",\"SMS or Whatsapp\",\"Skype or Webex\"],\n                    fieldname:\"type_of_interaction\"},\n    {label:__(\"Result\"), fieldtype:\"Select\", options: \n    [\"Status Quo\",\"Warmer\",\"Colder\",\"Closed Lost\",\"Closed Won\"], fieldname:\"result\"},\n    {'fieldname': 'responsible', 'fieldtype': 'Link', options:\"User\", 'default': user, 'label': 'Responsible', 'reqd': 0},\n    {'fieldname': 'create_task', 'fieldtype': 'Check', 'default': true, 'label': 'Create Task'},\n    {fieldtype: \"Column Break\"},\n\n    {'fieldname': 'next_date', 'fieldtype': 'Date', \n    'label': 'Next Action Date', 'default': frappe.datetime.add_days(frappe.datetime.nowdate(),7), 'reqd': 0},\n    {'fieldname': 'next_action_by', 'fieldtype': 'Link', options:\"User\", 'default': user,'label': 'Next Action By', 'reqd': 0},\n    {'fieldname': 'comment', 'fieldtype': 'Text', 'label': 'Next Action Task', 'reqd': 1},\n    {fieldtype: \"Section Break\"},\n\n    {'fieldname': 'remarks', 'fieldtype': 'Text Editor', 'label': 'Remarks', 'reqd': 1} \n\n\n],\nfunction(values){\n    var c = d.get_values()\n    var cmnt = \"Person Interacted with: \"+ c.person_interacted_with\n               +\"<br>Type of Interaction: \"+ c.type_of_interaction\n               +\"<br>Result: \"+ c.result \n               +\"<br>Next Action Date: \" +c.next_date \n               +\"<br>Next Action By: \"+ c.next_action_by \n               + \"<br>Next Action Task: \"+c.comment \n               + \"<br>Responsible: \"+c.responsible \n               + \"<br>Remarks: \"+c.remarks\n\n                \n    var me = frm.doc\n    // start interaction master\n       frappe.call({\n            method: \"shopchemical.custom_methods.add_interaction\",\n            args: {\n                doc:{\n                    doctype: \"Interaction Master\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    result: c.result,\n                    person_interacted_with: c.person_interacted_with,\n\n     //                responce_reson: c.responce_reson,\n                    next_action_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    // result: c.result,\n                    next_action_by: c.next_action_by,\n                    next_action_task: c.comment,\n                    remakrs: c.remarks,\n                    responsible: c.responsible\n                    // next_date\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction master record created\");\n            }\n        });\n    //end interaction master\n//create todo\nconsole.log(c.create_task);\n    if(c.create_task==true){\n        frappe.call({\n                        method: \"shopchemical.custom_methods.create_todo\",\n                        args: {\n                            owner: c.next_action_by,\n                            assigned_by: c.responsible,\n                            description: c.comment,\n                            date: c.next_date,\n                            reference_name: frm.doc.name,\n                            reference_type: frm.doc.doctype\n                        }\n                    })\n    }\n//end of create todo\n\n    return frappe.call({\n            method: \"frappe.desk.form.utils.add_comment\",\n            args: {\n                doc:{\n                    doctype: \"Communication\",\n                    communication_type: \"Comment\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    comment: \"cmnt\",\n                    subject: \"cmnt\",\n                    content: cmnt,\n                    responce_reson: c.responce_reson,\n                    next_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    result: c.result,\n                    next_action_by: c.next_action_by,\n                    reference_owner: frm.doc.owner,\n                    comment_by: user,\n                    user: user,\n                    sender_full_name:user_fullname,\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction Submited Successfully\");\n                        cur_frm.reload_doc();\n            if (cur_frm) {\n                        if (cur_frm.docname && (frappe.last_edited_communication[cur_frm.doctype] || {})[cur_frm.docname]) {\n                            delete frappe.last_edited_communication[cur_frm.doctype][cur_frm.docname];\n                        }\n                    }\n            }\n        });\n},\n'Add Interaction',\n'Submit','Add Interaction', \"btn-default\"\n)\n});\n\n                        // frm.refresh();\n\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Delivery Note", 
  "modified": "2017-04-10 09:49:25.250145", 
  "name": "Delivery Note-Client", 
  "script": "cur_frm.add_fetch('item_code','hs_code','hs_code');\ncur_frm.add_fetch('customer','sales_person','sales_person');\ncur_frm.add_fetch('customer','owner','customer_owner');\nfrappe.ui.form.on(\"Delivery Note\", \"onload\", function(frm) {\n   cur_frm.set_value(\"print_out_date\",frappe.datetime.nowdate())\n});\n\n\nDate.prototype.getMonthName = function(lang) {\n    lang = lang && (lang in Date.locale) ? lang : 'en';\n    return Date.locale[lang].month_names[this.getMonth()];\n};\n\nDate.prototype.getMonthNameShort = function(lang) {\n    lang = lang && (lang in Date.locale) ? lang : 'en';\n    return Date.locale[lang].month_names_short[this.getMonth()];\n};\n\nDate.locale = {\n    en: {\n       month_names: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n       month_names_short: ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC']\n    }\n};\n\nfrappe.ui.form.on(\"Delivery Note\", \"validate\", function(frm) {\n\tabbr_series = 'aa'\n\tfrappe.call({\n\t        method: \"frappe.client.get_value\",\n                async:false,\n\t        args: {\n\t            doctype: \"Company\",\n\t            fieldname: \"abbr_series\",\n\t            filters: { name: cur_frm.doc.company },\n\t        },\n\t       \tcallback: function(res){\n\t          \tif (res && res.message){\n\t\t\t\t\t\tabbr_series=res.message['abbr_series']\n                          \n\t           \t}\n\t       \t}  \t\n\t    });\n\tvar ymd = frm.doc.posting_date;\n\tvar yy = ymd.substring(2,4);\n\tvar mm = ymd.substring(5,7);\n\tvar d = new Date(cur_frm.doc.posting_date)\n\tvar ym = \"CT\"+abbr_series+\"DN\"+yy+ d.getMonthNameShort() + \"-.###\";\n\tfrm.set_value(\"naming_series\", ym);\n})\n\n\n//add interaction\nfrappe.ui.form.on(\"Delivery Note\", \"refresh\", function(frm, doctype, name) {\ncur_frm.add_custom_button(__('Add Interaction'), function() {\nvar d = frappe.prompt([\n    {'fieldname': 'person_interacted_with', 'fieldtype': 'Data', 'label': 'Person Interacted with', 'reqd': 0},    \n    {label:__(\"Type of Interaction\"), fieldtype:\"Select\",'default': \"Follow Up Call\",\n                    options: [\"Cold Call\",\"Follow Up Call\",\"Mail\",\"Cold Visit\",\"Follow Up Visit\",\"Existing Customer Visit\",\"SMS or Whatsapp\",\"Skype or Webex\"],\n                    fieldname:\"type_of_interaction\"},\n    {label:__(\"Result\"), fieldtype:\"Select\", options: \n    [\"Status Quo\",\"Warmer\",\"Colder\",\"Closed Lost\",\"Closed Won\"], fieldname:\"result\"},\n    {'fieldname': 'responsible', 'fieldtype': 'Link', options:\"User\", 'default': user, 'label': 'Responsible', 'reqd': 0},\n    {'fieldname': 'create_task', 'fieldtype': 'Check', 'default': true, 'label': 'Create Task'},\n    {fieldtype: \"Column Break\"},\n\n    {'fieldname': 'next_date', 'fieldtype': 'Date', \n    'label': 'Next Action Date', 'default': frappe.datetime.add_days(frappe.datetime.nowdate(),7), 'reqd': 0},\n    {'fieldname': 'next_action_by', 'fieldtype': 'Link', options:\"User\", 'default': user,'label': 'Next Action By', 'reqd': 0},\n    {'fieldname': 'comment', 'fieldtype': 'Text', 'label': 'Next Action Task', 'reqd': 1},\n    {fieldtype: \"Section Break\"},\n\n    {'fieldname': 'remarks', 'fieldtype': 'Text Editor', 'label': 'Remarks', 'reqd': 1} \n\n\n],\nfunction(values){\n    var c = d.get_values()\n    var cmnt = \"Person Interacted with: \"+ c.person_interacted_with\n               +\"<br>Type of Interaction: \"+ c.type_of_interaction\n               +\"<br>Result: \"+ c.result \n               +\"<br>Next Action Date: \" +c.next_date \n               +\"<br>Next Action By: \"+ c.next_action_by \n               + \"<br>Next Action Task: \"+c.comment \n               + \"<br>Responsible: \"+c.responsible \n               + \"<br>Remarks: \"+c.remarks\n\n                \n    var me = frm.doc\n    // start interaction master\n       frappe.call({\n            method: \"shopchemical.custom_methods.add_interaction\",\n            args: {\n                doc:{\n                    doctype: \"Interaction Master\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    result: c.result,\n                    person_interacted_with: c.person_interacted_with,\n\n     //                responce_reson: c.responce_reson,\n                    next_action_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    // result: c.result,\n                    next_action_by: c.next_action_by,\n                    next_action_task: c.comment,\n                    remakrs: c.remarks,\n                    responsible: c.responsible\n                    // next_date\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction master record created\");\n            }\n        });\n    //end interaction master\n//create todo\nconsole.log(c.create_task);\n    if(c.create_task==true){\n        frappe.call({\n                        method: \"shopchemical.custom_methods.create_todo\",\n                        args: {\n                            owner: c.next_action_by,\n                            assigned_by: c.responsible,\n                            description: c.comment,\n                            date: c.next_date,\n                            reference_name: frm.doc.name,\n                            reference_type: frm.doc.doctype\n                        }\n                    })\n    }\n//end of create todo\n\n    return frappe.call({\n            method: \"frappe.desk.form.utils.add_comment\",\n            args: {\n                doc:{\n                    doctype: \"Communication\",\n                    communication_type: \"Comment\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    comment: \"cmnt\",\n                    subject: \"cmnt\",\n                    content: cmnt,\n                    responce_reson: c.responce_reson,\n                    next_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    result: c.result,\n                    next_action_by: c.next_action_by,\n                    reference_owner: frm.doc.owner,\n                    comment_by: user,\n                    user: user,\n                    sender_full_name:user_fullname,\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction Submited Successfully\");\n                        cur_frm.reload_doc();\n            if (cur_frm) {\n                        if (cur_frm.docname && (frappe.last_edited_communication[cur_frm.doctype] || {})[cur_frm.docname]) {\n                            delete frappe.last_edited_communication[cur_frm.doctype][cur_frm.docname];\n                        }\n                    }\n            }\n        });\n},\n'Add Interaction',\n'Submit','Add Interaction', \"btn-default\"\n)\n});\n\n                        // frm.refresh();\n\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Purchase Order", 
  "modified": "2017-04-10 09:46:33.474718", 
  "name": "Purchase Order-Client", 
  "script": "\nDate.prototype.getMonthName = function(lang) {\n    lang = lang && (lang in Date.locale) ? lang : 'en';\n    return Date.locale[lang].month_names[this.getMonth()];\n};\n\nDate.prototype.getMonthNameShort = function(lang) {\n    lang = lang && (lang in Date.locale) ? lang : 'en';\n    return Date.locale[lang].month_names_short[this.getMonth()];\n};\n\nDate.locale = {\n    en: {\n       month_names: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n       month_names_short: ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC']\n    }\n};\n\nfrappe.ui.form.on(\"Purchase Order\", \"validate\", function(frm) {\n\tabbr_series = 'aa'\n\tfrappe.call({\n\t        method: \"frappe.client.get_value\",\n                async:false,\n\t        args: {\n\t            doctype: \"Company\",\n\t            fieldname: \"abbr_series\",\n\t            filters: { name: cur_frm.doc.company },\n\t        },\n\t       \tcallback: function(res){\n\t          \tif (res && res.message){\n\t\t\t\t\t\tabbr_series=res.message['abbr_series']\n                          \n\t           \t}\n\t       \t}  \t\n\t    });\n\tvar ymd = frm.doc.transaction_date;\n\tvar yy = ymd.substring(2,4);\n\tvar mm = ymd.substring(5,7);\n\tvar d = new Date(cur_frm.doc.transaction_date)\n\tvar ym = \"CT\"+abbr_series+\"PO\"+yy+ d.getMonthNameShort() + \"-.###\";\n\tfrm.set_value(\"naming_series\", ym);\n})\n\n\n//Add Interaction\nfrappe.ui.form.on(\"Purchase Order\", \"refresh\", function(frm, doctype, name) {\ncur_frm.add_custom_button(__('Add Interaction'), function() {\nvar d = frappe.prompt([\n    {'fieldname': 'person_interacted_with', 'fieldtype': 'Data', 'label': 'Person Interacted with', 'reqd': 0},    \n    {label:__(\"Type of Interaction\"), fieldtype:\"Select\",'default': \"Follow Up Call\",\n                    options: [\"Cold Call\",\"Follow Up Call\",\"Mail\",\"Cold Visit\",\"Follow Up Visit\",\"Existing Customer Visit\",\"SMS or Whatsapp\",\"Skype or Webex\"],\n                    fieldname:\"type_of_interaction\"},\n    {label:__(\"Result\"), fieldtype:\"Select\", options: \n    [\"Status Quo\",\"Warmer\",\"Colder\",\"Closed Lost\",\"Closed Won\"], fieldname:\"result\"},\n    {'fieldname': 'responsible', 'fieldtype': 'Link', options:\"User\", 'default': user, 'label': 'Responsible', 'reqd': 0},\n    {'fieldname': 'create_task', 'fieldtype': 'Check', 'default': true, 'label': 'Create Task'},\n    {fieldtype: \"Column Break\"},\n\n    {'fieldname': 'next_date', 'fieldtype': 'Date', \n    'label': 'Next Action Date', 'default': frappe.datetime.add_days(frappe.datetime.nowdate(),7), 'reqd': 0},\n    {'fieldname': 'next_action_by', 'fieldtype': 'Link', options:\"User\", 'default': user,'label': 'Next Action By', 'reqd': 0},\n    {'fieldname': 'comment', 'fieldtype': 'Text', 'label': 'Next Action Task', 'reqd': 1},\n    {fieldtype: \"Section Break\"},\n\n    {'fieldname': 'remark', 'fieldtype': 'Text Editor', 'label': 'Remarks', 'reqd': 1} \n\n\n],\nfunction(values){\n    var c = d.get_values()\n    var cmnt = \"Person Interacted with: \"+ c.person_interacted_with\n               +\"<br>Type of Interaction: \"+ c.type_of_interaction\n               +\"<br>Result: \"+ c.result \n               +\"<br>Next Action Date: \" +c.next_date \n               +\"<br>Next Action By: \"+ c.next_action_by \n               + \"<br>Next Action Task: \"+c.comment \n               + \"<br>Responsible: \"+c.responsible \n               + \"<br>Remarks: \"+c.remark \n\n                \n    var me = frm.doc\n    // start interaction master\n       frappe.call({\n            method: \"shopchemical.custom_methods.add_interaction\",\n            args: {\n                doc:{\n                    doctype: \"Interaction Master\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    result: c.result,\n                    person_interacted_with: c.person_interacted_with,\n\n     //                responce_reson: c.responce_reson,\n                    next_action_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    // result: c.result,\n                    next_action_by: c.next_action_by,\n                    next_action_task: c.comment,\n                    remakrs: c.remarks,\n                    responsible: c.responsible\n                    // next_date\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction master record created\");\n            }\n        });\n    //end interaction master\n//create todo\nconsole.log(c.create_task);\n    if(c.create_task==true){\n        frappe.call({\n                        method: \"shopchemical.custom_methods.create_todo\",\n                        args: {\n                            owner: c.next_action_by,\n                            assigned_by: c.responsible,\n                            description: c.comment,\n                            date: c.next_date,\n                            reference_name: frm.doc.name,\n                            reference_type: frm.doc.doctype\n                        }\n                    })\n    }\n//end of create todo\n\n    return frappe.call({\n            method: \"frappe.desk.form.utils.add_comment\",\n            args: {\n                doc:{\n                    doctype: \"Communication\",\n                    communication_type: \"Comment\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    comment: \"cmnt\",\n                    subject: \"cmnt\",\n                    content: cmnt,\n                    responce_reson: c.responce_reson,\n                    next_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    result: c.result,\n                    next_action_by: c.next_action_by,\n                    reference_owner: frm.doc.owner,\n                    comment_by: user,\n                    user: user,\n                    sender_full_name:user_fullname,\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction Submited Successfully\");\n                        cur_frm.reload_doc();\n            if (cur_frm) {\n                        if (cur_frm.docname && (frappe.last_edited_communication[cur_frm.doctype] || {})[cur_frm.docname]) {\n                            delete frappe.last_edited_communication[cur_frm.doctype][cur_frm.docname];\n                        }\n                    }\n            }\n        });\n},\n'Add Interaction',\n'Submit','Add Interaction', \"btn-default\"\n)\n});\n\n                        // frm.refresh();\n\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Purchase Receipt", 
  "modified": "2017-03-16 17:56:26.572958", 
  "name": "Purchase Receipt-Client", 
  "script": "Date.prototype.getMonthName = function(lang) {\n    lang = lang && (lang in Date.locale) ? lang : 'en';\n    return Date.locale[lang].month_names[this.getMonth()];\n};\n\nDate.prototype.getMonthNameShort = function(lang) {\n    lang = lang && (lang in Date.locale) ? lang : 'en';\n    return Date.locale[lang].month_names_short[this.getMonth()];\n};\n\nDate.locale = {\n    en: {\n       month_names: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n       month_names_short: ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC']\n    }\n};\n\nfrappe.ui.form.on(\"Purchase Receipt\", \"validate\", function(frm) {\n\tabbr_series = 'aa'\n\tfrappe.call({\n\t        method: \"frappe.client.get_value\",\n                async:false,\n\t        args: {\n\t            doctype: \"Company\",\n\t            fieldname: \"abbr_series\",\n\t            filters: { name: cur_frm.doc.company },\n\t        },\n\t       \tcallback: function(res){\n\t          \tif (res && res.message){\n\t\t\t\t\t\tabbr_series=res.message['abbr_series']\n                          \n\t           \t}\n\t       \t}  \t\n\t    });\n\tvar ymd = frm.doc.posting_date;\n\tvar yy = ymd.substring(2,4);\n\tvar mm = ymd.substring(5,7);\n\tvar d = new Date(cur_frm.doc.posting_date)\n\tvar ym = \"CT\"+abbr_series+\"PREC\"+yy+ d.getMonthNameShort() + \"-.###\";\n\tfrm.set_value(\"naming_series\", ym);\n})", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Purchase Invoice", 
  "modified": "2017-04-10 09:44:25.281809", 
  "name": "Purchase Invoice-Client", 
  "script": "\nDate.prototype.getMonthName = function(lang) {\n    lang = lang && (lang in Date.locale) ? lang : 'en';\n    return Date.locale[lang].month_names[this.getMonth()];\n};\n\nDate.prototype.getMonthNameShort = function(lang) {\n    lang = lang && (lang in Date.locale) ? lang : 'en';\n    return Date.locale[lang].month_names_short[this.getMonth()];\n};\n\nDate.locale = {\n    en: {\n       month_names: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n       month_names_short: ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC']\n    }\n};\n\nfrappe.ui.form.on(\"Purchase Invoice\", \"validate\", function(frm) {\n\tabbr_series = 'aa'\n\tfrappe.call({\n\t        method: \"frappe.client.get_value\",\n                async:false,\n\t        args: {\n\t            doctype: \"Company\",\n\t            fieldname: \"abbr_series\",\n\t            filters: { name: cur_frm.doc.company },\n\t        },\n\t       \tcallback: function(res){\n\t          \tif (res && res.message){\n\t\t\t\t\t\tabbr_series=res.message['abbr_series']\n                          \n\t           \t}\n\t       \t}  \t\n\t    });\n\tvar ymd = frm.doc.posting_date;\n\tvar yy = ymd.substring(2,4);\n\tvar mm = ymd.substring(5,7);\n\tvar d = new Date(cur_frm.doc.posting_date)\n\tvar ym = \"CT\"+abbr_series+\"PINV\"+yy+ d.getMonthNameShort() + \"-.###\";\n\tfrm.set_value(\"naming_series\", ym);\n})\n\n//Add interaction\nfrappe.ui.form.on(\"Purchase Invoice\", \"refresh\", function(frm, doctype, name) {\ncur_frm.add_custom_button(__('Add Interaction'), function() {\nvar d = frappe.prompt([\n    {'fieldname': 'person_interacted_with', 'fieldtype': 'Data', 'label': 'Person Interacted with', 'reqd': 0},    \n    {label:__(\"Type of Interaction\"), fieldtype:\"Select\",'default': \"Follow Up Call\",\n                    options: [\"Cold Call\",\"Follow Up Call\",\"Mail\",\"Cold Visit\",\"Follow Up Visit\",\"Existing Customer Visit\",\"SMS or Whatsapp\",\"Skype or Webex\"],\n                    fieldname:\"type_of_interaction\"},\n    {label:__(\"Result\"), fieldtype:\"Select\", options: \n    [\"Status Quo\",\"Warmer\",\"Colder\",\"Closed Lost\",\"Closed Won\"], fieldname:\"result\"},\n    {'fieldname': 'responsible', 'fieldtype': 'Link', options:\"User\", 'default': user, 'label': 'Responsible', 'reqd': 0},\n    {'fieldname': 'create_task', 'fieldtype': 'Check', 'default': true, 'label': 'Create Task'},\n    {fieldtype: \"Column Break\"},\n\n    {'fieldname': 'next_date', 'fieldtype': 'Date', \n    'label': 'Next Action Date', 'default': frappe.datetime.add_days(frappe.datetime.nowdate(),7), 'reqd': 0},\n    {'fieldname': 'next_action_by', 'fieldtype': 'Link', options:\"User\", 'default': user,'label': 'Next Action By', 'reqd': 0},\n    {'fieldname': 'comment', 'fieldtype': 'Text', 'label': 'Next Action Task', 'reqd': 1},\n    {fieldtype: \"Section Break\"},\n\n    {'fieldname': 'remarks', 'fieldtype': 'Text Editor', 'label': 'Remarks', 'reqd': 1} \n\n\n],\nfunction(values){\n    var c = d.get_values()\n    var cmnt = \"Person Interacted with: \"+ c.person_interacted_with\n               +\"<br>Type of Interaction: \"+ c.type_of_interaction\n               +\"<br>Result: \"+ c.result \n               +\"<br>Next Action Date: \" +c.next_date \n               +\"<br>Next Action By: \"+ c.next_action_by \n               + \"<br>Next Action Task: \"+c.comment \n               + \"<br>Responsible: \"+c.responsible \n               + \"<br>Remarks: \"+c.remarks \n\n                \n    var me = frm.doc\n    // start interaction master\n       frappe.call({\n            method: \"shopchemical.custom_methods.add_interaction\",\n            args: {\n                doc:{\n                    doctype: \"Interaction Master\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    result: c.result,\n                    person_interacted_with: c.person_interacted_with,\n\n     //                responce_reson: c.responce_reson,\n                    next_action_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    // result: c.result,\n                    next_action_by: c.next_action_by,\n                    next_action_task: c.comment,\n                    remakrs: c.remarks,\n                    responsible: c.responsible\n                    // next_date\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction master record created\");\n            }\n        });\n    //end interaction master\n//create todo\nconsole.log(c.create_task);\n    if(c.create_task==true){\n        frappe.call({\n                        method: \"shopchemical.custom_methods.create_todo\",\n                        args: {\n                            owner: c.next_action_by,\n                            assigned_by: c.responsible,\n                            description: c.comment,\n                            date: c.next_date,\n                            reference_name: frm.doc.name,\n                            reference_type: frm.doc.doctype\n                        }\n                    })\n    }\n//end of create todo\n\n    return frappe.call({\n            method: \"frappe.desk.form.utils.add_comment\",\n            args: {\n                doc:{\n                    doctype: \"Communication\",\n                    communication_type: \"Comment\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    comment: \"cmnt\",\n                    subject: \"cmnt\",\n                    content: cmnt,\n                    responce_reson: c.responce_reson,\n                    next_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    result: c.result,\n                    next_action_by: c.next_action_by,\n                    reference_owner: frm.doc.owner,\n                    comment_by: user,\n                    user: user,\n                    sender_full_name:user_fullname,\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction Submited Successfully\");\n                        cur_frm.reload_doc();\n            if (cur_frm) {\n                        if (cur_frm.docname && (frappe.last_edited_communication[cur_frm.doctype] || {})[cur_frm.docname]) {\n                            delete frappe.last_edited_communication[cur_frm.doctype][cur_frm.docname];\n                        }\n                    }\n            }\n        });\n},\n'Add Interaction',\n'Submit','Add Interaction', \"btn-default\"\n)\n});\n\n                        // frm.refresh();\n\n});\n\n", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Journal Entry", 
  "modified": "2017-04-10 09:49:42.620211", 
  "name": "Journal Entry-Client", 
  "script": "\nDate.prototype.getMonthName = function(lang) {\n    lang = lang && (lang in Date.locale) ? lang : 'en';\n    return Date.locale[lang].month_names[this.getMonth()];\n};\n\nDate.prototype.getMonthNameShort = function(lang) {\n    lang = lang && (lang in Date.locale) ? lang : 'en';\n    return Date.locale[lang].month_names_short[this.getMonth()];\n};\n\nDate.locale = {\n    en: {\n       month_names: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n       month_names_short: ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC']\n    }\n};\n\nfrappe.ui.form.on(\"Journal Entry\", \"validate\", function(frm) {\n\tabbr_series = 'aa'\n\tfrappe.call({\n\t        method: \"frappe.client.get_value\",\n                async:false,\n\t        args: {\n\t            doctype: \"Company\",\n\t            fieldname: \"abbr_series\",\n\t            filters: { name: cur_frm.doc.company },\n\t        },\n\t       \tcallback: function(res){\n\t          \tif (res && res.message){\n\t\t\t\t\t\tabbr_series=res.message['abbr_series']\n                          \n\t           \t}\n\t       \t}  \t\n\t    });\n\tvar ymd = frm.doc.posting_date;\n\tvar yy = ymd.substring(2,4);\n\tvar mm = ymd.substring(5,7);\n\tvar d = new Date(cur_frm.doc.posting_date)\n\tvar ym = \"CT\"+abbr_series+\"JV\"+yy+ d.getMonthNameShort() + \"-.###\";\n\tfrm.set_value(\"naming_series\", ym);\n})\n\n//Add interaction\n\nfrappe.ui.form.on(\"Journal Entry\", \"refresh\", function(frm, doctype, name) {\ncur_frm.add_custom_button(__('Add Interaction'), function() {\nvar d = frappe.prompt([\n    {'fieldname': 'person_interacted_with', 'fieldtype': 'Data', 'label': 'Person Interacted with', 'reqd': 0},    \n    {label:__(\"Type of Interaction\"), fieldtype:\"Select\",'default': \"Follow Up Call\",\n                    options: [\"Cold Call\",\"Follow Up Call\",\"Mail\",\"Cold Visit\",\"Follow Up Visit\",\"Existing Customer Visit\",\"SMS or Whatsapp\",\"Skype or Webex\"],\n                    fieldname:\"type_of_interaction\"},\n    {label:__(\"Result\"), fieldtype:\"Select\", options: \n    [\"Status Quo\",\"Warmer\",\"Colder\",\"Closed Lost\",\"Closed Won\"], fieldname:\"result\"},\n    {'fieldname': 'responsible', 'fieldtype': 'Link', options:\"User\", 'default': user, 'label': 'Responsible', 'reqd': 0},\n    {'fieldname': 'create_task', 'fieldtype': 'Check', 'default': true, 'label': 'Create Task'},\n    {fieldtype: \"Column Break\"},\n\n    {'fieldname': 'next_date', 'fieldtype': 'Date', \n    'label': 'Next Action Date', 'default': frappe.datetime.add_days(frappe.datetime.nowdate(),7), 'reqd': 0},\n    {'fieldname': 'next_action_by', 'fieldtype': 'Link', options:\"User\", 'default': user,'label': 'Next Action By', 'reqd': 0},\n    {'fieldname': 'comment', 'fieldtype': 'Text', 'label': 'Next Action Task', 'reqd': 1},\n    {fieldtype: \"Section Break\"},\n\n    {'fieldname': 'remarks', 'fieldtype': 'Text Editor', 'label': 'Remarks', 'reqd': 1} \n\n\n],\nfunction(values){\n    var c = d.get_values()\n    var cmnt = \"Person Interacted with: \"+ c.person_interacted_with\n               +\"<br>Type of Interaction: \"+ c.type_of_interaction\n               +\"<br>Result: \"+ c.result \n               +\"<br>Next Action Date: \" +c.next_date \n               +\"<br>Next Action By: \"+ c.next_action_by \n               + \"<br>Next Action Task: \"+c.comment \n               + \"<br>Responsible: \"+c.responsible \n               + \"<br>Remarks: \"+c.remarks\n\n                \n    var me = frm.doc\n    // start interaction master\n       frappe.call({\n            method: \"shopchemical.custom_methods.add_interaction\",\n            args: {\n                doc:{\n                    doctype: \"Interaction Master\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    result: c.result,\n                    person_interacted_with: c.person_interacted_with,\n\n     //                responce_reson: c.responce_reson,\n                    next_action_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    // result: c.result,\n                    next_action_by: c.next_action_by,\n                    next_action_task: c.comment,\n                    remakrs: c.remarks,\n                    responsible: c.responsible\n                    // next_date\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction master record created\");\n            }\n        });\n    //end interaction master\n//create todo\nconsole.log(c.create_task);\n    if(c.create_task==true){\n        frappe.call({\n                        method: \"shopchemical.custom_methods.create_todo\",\n                        args: {\n                            owner: c.next_action_by,\n                            assigned_by: c.responsible,\n                            description: c.comment,\n                            date: c.next_date,\n                            reference_name: frm.doc.name,\n                            reference_type: frm.doc.doctype\n                        }\n                    })\n    }\n//end of create todo\n\n    return frappe.call({\n            method: \"frappe.desk.form.utils.add_comment\",\n            args: {\n                doc:{\n                    doctype: \"Communication\",\n                    communication_type: \"Comment\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    comment: \"cmnt\",\n                    subject: \"cmnt\",\n                    content: cmnt,\n                    responce_reson: c.responce_reson,\n                    next_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    result: c.result,\n                    next_action_by: c.next_action_by,\n                    reference_owner: frm.doc.owner,\n                    comment_by: user,\n                    user: user,\n                    sender_full_name:user_fullname,\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction Submited Successfully\");\n                        cur_frm.reload_doc();\n            if (cur_frm) {\n                        if (cur_frm.docname && (frappe.last_edited_communication[cur_frm.doctype] || {})[cur_frm.docname]) {\n                            delete frappe.last_edited_communication[cur_frm.doctype][cur_frm.docname];\n                        }\n                    }\n            }\n        });\n},\n'Add Interaction',\n'Submit','Add Interaction', \"btn-default\"\n)\n});\n\n                        // frm.refresh();\n\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Payment Entry", 
  "modified": "2017-05-09 13:46:54.529001", 
  "name": "Payment Entry-Client", 
  "script": "\nDate.prototype.getMonthName = function(lang) {\n    lang = lang && (lang in Date.locale) ? lang : 'en';\n    return Date.locale[lang].month_names[this.getMonth()];\n};\n\nDate.prototype.getMonthNameShort = function(lang) {\n    lang = lang && (lang in Date.locale) ? lang : 'en';\n    return Date.locale[lang].month_names_short[this.getMonth()];\n};\n\nDate.locale = {\n    en: {\n       month_names: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n       month_names_short: ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC']\n    }\n};\n\nfrappe.ui.form.on(\"Payment Entry\", \"validate\", function(frm) {\n\tabbr_series = 'QA'\n\tfrappe.call({\n\t        method: \"frappe.client.get_value\",\n                async:false,\n\t        args: {\n\t            doctype: \"Company\",\n\t            fieldname: \"abbr_series\",\n\t            filters: { name: cur_frm.doc.company },\n\t        },\n\t       \tcallback: function(res){\n\t          \tif (res && res.message){\n\t\t\t\t\t\tabbr_series=res.message['abbr_series']\n                          \n\t           \t}\n\t       \t}  \t\n\t    });\n\tvar ymd = frm.doc.posting_date;\n\tvar yy = ymd.substring(2,4);\n\tvar mm = ymd.substring(5,7);\n\tvar d = new Date(cur_frm.doc.posting_date)\n\tvar ym = \"CT\"+abbr_series+\"PE\"+yy+ d.getMonthNameShort() + \"-.###\";\n\tfrm.set_value(\"naming_series\", ym);\n})", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Lead", 
  "modified": "2017-08-29 09:23:49.104556", 
  "name": "Lead-Client", 
  "script": "Date.prototype.getMonthName = function(lang) {\n    lang = lang && (lang in Date.locale) ? lang : 'en';\n    return Date.locale[lang].month_names[this.getMonth()];\n};\n\nDate.prototype.getMonthNameShort = function(lang) {\n    lang = lang && (lang in Date.locale) ? lang : 'en';\n    return Date.locale[lang].month_names_short[this.getMonth()];\n};\n\nDate.locale = {\n    en: {\n       month_names: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n       month_names_short: ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC']\n    }\n};\n\nfrappe.ui.form.on(\"Lead\", \"validate\", function(frm) {\n\tabbr_series = 'aa'\n\tfrappe.call({\n\t        method: \"frappe.client.get_value\",\n                async:false,\n\t        args: {\n\t            doctype: \"Company\",\n\t            fieldname: \"abbr_series\",\n\t            filters: { name: cur_frm.doc.company },\n\t        },\n\t       \tcallback: function(res){\n\t          \tif (res && res.message){\n\t\t\t\t\t\tabbr_series=res.message['abbr_series']\n                          \n\t           \t}\n\t       \t}  \t\n\t    });\n\tvar ymd = frm.doc.transaction_date;\n\tvar yy = ymd.substring(2,4);\n\tvar mm = ymd.substring(5,7);\n\tvar d = new Date(cur_frm.doc.transaction_date)\n\tvar ym = \"CT\"+abbr_series+\"LEAD\"+yy+ mm + \"-.###\";\n\tfrm.set_value(\"naming_series\", ym);\n})\n\n\nfrappe.ui.form.on(\"Lead\", \"refresh\", function(frm, doctype, name) {\ncur_frm.add_custom_button(__('Add Interaction'), function() {\nvar d = frappe.prompt([\n    {'fieldname': 'person_interacted_with', 'fieldtype': 'Data', 'label': 'Person Interacted with', 'reqd': 0},    \n    {label:__(\"Type of Interaction\"), fieldtype:\"Select\",'default': \"Follow Up Call\",\n                    options: [\"Cold Call\",\"Follow Up Call\",\"Mail\",\"Cold Visit\",\"Follow Up Visit\",\"Existing Customer Visit\",\"SMS or Whatsapp\",\"Skype or Webex\"],\n                    fieldname:\"type_of_interaction\"},\n    {label:__(\"Result\"), fieldtype:\"Select\", options: \n    [\"Status Quo\",\"Warmer\",\"Colder\",\"Closed Lost\",\"Closed Won\"], fieldname:\"result\"},\n    {'fieldname': 'responsible', 'fieldtype': 'Link', options:\"User\", 'default': user, 'label': 'Responsible', 'reqd': 0},\n    {'fieldname': 'create_task', 'fieldtype': 'Check', 'default': true, 'label': 'Create Task'},\n    {fieldtype: \"Column Break\"},\n\n    {'fieldname': 'next_date', 'fieldtype': 'Date', \n    'label': 'Next Action Date', 'default': frappe.datetime.add_days(frappe.datetime.nowdate(),7), 'reqd': 0},\n    {'fieldname': 'next_action_by', 'fieldtype': 'Link', options:\"User\", 'default': user,'label': 'Next Action By', 'reqd': 0},\n    {'fieldname': 'comment', 'fieldtype': 'Text', 'label': 'Next Action Task', 'reqd': 1},\n    {fieldtype: \"Section Break\"},\n\n    {'fieldname': 'remarks', 'fieldtype': 'Text Editor', 'label': 'Remarks', 'reqd': 1} \n\n\n],\nfunction(values){\n    var c = d.get_values()\n    var cmnt = \"Person Interacted with: \"+ c.person_interacted_with\n               +\"<br>Type of Interaction: \"+ c.type_of_interaction\n               +\"<br>Result: \"+ c.result \n               +\"<br>Next Action Date: \" +c.next_date \n               +\"<br>Next Action By: \"+ c.next_action_by \n               + \"<br>Next Action Task: \"+c.comment \n               + \"<br>Responsible: \"+c.responsible \n               + \"<br>Remarks: \"+c.remarks\n\n                \n    var me = frm.doc\n    // start interaction master\n       frappe.call({\n            method: \"shopchemical.custom_methods.add_interaction\",\n            args: {\n                doc:{\n                    doctype: \"Interaction Master\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    result: c.result,\n                    person_interacted_with: c.person_interacted_with,\n\n     //                responce_reson: c.responce_reson,\n                    next_action_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    // result: c.result,\n                    next_action_by: c.next_action_by,\n                    next_action_task: c.comment,\n                    remakrs: c.remarks,\n                    responsible: c.responsible\n                    // next_date\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction master record created\");\n            }\n        });\n    //end interaction master\n//create todo\nconsole.log(c.create_task);\n    if(c.create_task==true){\n        frappe.call({\n                        method: \"shopchemical.custom_methods.create_todo\",\n                        args: {\n                            owner: c.next_action_by,\n                            assigned_by: c.responsible,\n                            description: c.comment,\n                            date: c.next_date,\n                            reference_name: frm.doc.name,\n                            reference_type: frm.doc.doctype\n                        }\n                    })\n    }\n//end of create todo\n\n    return frappe.call({\n            method: \"frappe.desk.form.utils.add_comment\",\n            args: {\n                doc:{\n                    doctype: \"Communication\",\n                    communication_type: \"Comment\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    comment: \"cmnt\",\n                    subject: \"cmnt\",\n                    content: cmnt,\n                    responce_reson: c.responce_reson,\n                    next_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    result: c.result,\n                    next_action_by: c.next_action_by,\n                    reference_owner: frm.doc.owner,\n                    comment_by: user,\n                    user: user,\n                    sender_full_name:user_fullname,\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction Submited Successfully\");\n                        cur_frm.reload_doc();\n            if (cur_frm) {\n                        if (cur_frm.docname && (frappe.last_edited_communication[cur_frm.doctype] || {})[cur_frm.docname]) {\n                            delete frappe.last_edited_communication[cur_frm.doctype][cur_frm.docname];\n                        }\n                    }\n            }\n        });\n},\n'Add Interaction',\n'Submit','Add Interaction', \"btn-default\"\n)\n});\n\n                        // frm.refresh();\n\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Customer", 
  "modified": "2017-04-10 09:48:26.492989", 
  "name": "Customer-Client", 
  "script": "frappe.ui.form.on(\"Customer\", \"refresh\", function(frm, doctype, name) {\ncur_frm.add_custom_button(__('Add Interaction'), function() {\nvar d = frappe.prompt([\n    {'fieldname': 'person_interacted_with', 'fieldtype': 'Data', 'label': 'Person Interacted with', 'reqd': 0},    \n    {label:__(\"Type of Interaction\"), fieldtype:\"Select\",'default': \"Follow Up Call\",\n                    options: [\"Cold Call\",\"Follow Up Call\",\"Mail\",\"Cold Visit\",\"Follow Up Visit\",\"Existing Customer Visit\",\"SMS or Whatsapp\",\"Skype or Webex\"],\n                    fieldname:\"type_of_interaction\"},\n    {label:__(\"Result\"), fieldtype:\"Select\", options: \n    [\"Status Quo\",\"Warmer\",\"Colder\",\"Closed Lost\",\"Closed Won\"], fieldname:\"result\"},\n    {'fieldname': 'responsible', 'fieldtype': 'Link', options:\"User\", 'default': user, 'label': 'Responsible', 'reqd': 0},\n    {'fieldname': 'create_task', 'fieldtype': 'Check', 'default': true, 'label': 'Create Task'},\n    {fieldtype: \"Column Break\"},\n\n    {'fieldname': 'next_date', 'fieldtype': 'Date', \n    'label': 'Next Action Date', 'default': frappe.datetime.add_days(frappe.datetime.nowdate(),7), 'reqd': 0},\n    {'fieldname': 'next_action_by', 'fieldtype': 'Link', options:\"User\", 'default': user,'label': 'Next Action By', 'reqd': 0},\n    {'fieldname': 'comment', 'fieldtype': 'Text', 'label': 'Next Action Task', 'reqd': 1},\n    {fieldtype: \"Section Break\"},\n\n    {'fieldname': 'remarks', 'fieldtype': 'Text Editor', 'label': 'Remarks', 'reqd': 1} \n\n\n],\nfunction(values){\n    var c = d.get_values()\n    var cmnt = \"Person Interacted with: \"+ c.person_interacted_with\n               +\"<br>Type of Interaction: \"+ c.type_of_interaction\n               +\"<br>Result: \"+ c.result \n               +\"<br>Next Action Date: \" +c.next_date \n               +\"<br>Next Action By: \"+ c.next_action_by \n               + \"<br>Next Action Task: \"+c.comment \n               + \"<br>Responsible: \"+c.responsible \n               + \"<br>Remarks: \"+c.remarks\n\n                \n    var me = frm.doc\n    // start interaction master\n       frappe.call({\n            method: \"shopchemical.custom_methods.add_interaction\",\n            args: {\n                doc:{\n                    doctype: \"Interaction Master\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    result: c.result,\n                    person_interacted_with: c.person_interacted_with,\n\n     //                responce_reson: c.responce_reson,\n                    next_action_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    // result: c.result,\n                    next_action_by: c.next_action_by,\n                    next_action_task: c.comment,\n                    remakrs: c.remarks,\n                    responsible: c.responsible\n                    // next_date\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction master record created\");\n            }\n        });\n    //end interaction master\n//create todo\nconsole.log(c.create_task);\n    if(c.create_task==true){\n        frappe.call({\n                        method: \"shopchemical.custom_methods.create_todo\",\n                        args: {\n                            owner: c.next_action_by,\n                            assigned_by: c.responsible,\n                            description: c.comment,\n                            date: c.next_date,\n                            reference_name: frm.doc.name,\n                            reference_type: frm.doc.doctype\n                        }\n                    })\n    }\n//end of create todo\n\n    return frappe.call({\n            method: \"frappe.desk.form.utils.add_comment\",\n            args: {\n                doc:{\n                    doctype: \"Communication\",\n                    communication_type: \"Comment\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    comment: \"cmnt\",\n                    subject: \"cmnt\",\n                    content: cmnt,\n                    responce_reson: c.responce_reson,\n                    next_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    result: c.result,\n                    next_action_by: c.next_action_by,\n                    reference_owner: frm.doc.owner,\n                    comment_by: user,\n                    user: user,\n                    sender_full_name:user_fullname,\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction Submited Successfully\");\n                        cur_frm.reload_doc();\n            if (cur_frm) {\n                        if (cur_frm.docname && (frappe.last_edited_communication[cur_frm.doctype] || {})[cur_frm.docname]) {\n                            delete frappe.last_edited_communication[cur_frm.doctype][cur_frm.docname];\n                        }\n                    }\n            }\n        });\n},\n'Add Interaction',\n'Submit','Add Interaction', \"btn-default\"\n)\n});\n\n                        // frm.refresh();\n\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Supplier", 
  "modified": "2017-04-10 09:43:25.136136", 
  "name": "Supplier-Client", 
  "script": "frappe.ui.form.on(\"Supplier\", \"refresh\", function(frm, doctype, name) {\ncur_frm.add_custom_button(__('Add Interaction'), function() {\nvar d = frappe.prompt([\n    {'fieldname': 'person_interacted_with', 'fieldtype': 'Data', 'label': 'Person Interacted with', 'reqd': 0},    \n    {label:__(\"Type of Interaction\"), fieldtype:\"Select\",'default': \"Follow Up Call\",\n                    options: [\"Cold Call\",\"Follow Up Call\",\"Mail\",\"Cold Visit\",\"Follow Up Visit\",\"Existing Customer Visit\",\"SMS or Whatsapp\",\"Skype or Webex\"],\n                    fieldname:\"type_of_interaction\"},\n    {label:__(\"Result\"), fieldtype:\"Select\", options: \n    [\"Status Quo\",\"Warmer\",\"Colder\",\"Closed Lost\",\"Closed Won\"], fieldname:\"result\"},\n    {'fieldname': 'responsible', 'fieldtype': 'Link', options:\"User\", 'default': user, 'label': 'Responsible', 'reqd': 0},\n    {'fieldname': 'create_task', 'fieldtype': 'Check', 'default': true, 'label': 'Create Task'},\n    {fieldtype: \"Column Break\"},\n\n    {'fieldname': 'next_date', 'fieldtype': 'Date', \n    'label': 'Next Action Date', 'default': frappe.datetime.add_days(frappe.datetime.nowdate(),7), 'reqd': 0},\n    {'fieldname': 'next_action_by', 'fieldtype': 'Link', options:\"User\", 'default': user,'label': 'Next Action By', 'reqd': 0},\n    {'fieldname': 'comment', 'fieldtype': 'Text', 'label': 'Next Action Task', 'reqd': 1},\n    {fieldtype: \"Section Break\"},\n\n    {'fieldname': 'remarks', 'fieldtype': 'Text Editor', 'label': 'Remarks', 'reqd': 1} \n\n\n],\nfunction(values){\n    var c = d.get_values()\n    var cmnt = \"Person Interacted with: \"+ c.person_interacted_with\n               +\"<br>Type of Interaction: \"+ c.type_of_interaction\n               +\"<br>Result: \"+ c.result \n               +\"<br>Next Action Date: \" +c.next_date \n               +\"<br>Next Action By: \"+ c.next_action_by \n               + \"<br>Next Action Task: \"+c.comment \n               + \"<br>Responsible: \"+c.responsible \n               + \"<br>Remarks: \"+c.remarks\n\n                \n    var me = frm.doc\n    // start interaction master\n       frappe.call({\n            method: \"shopchemical.custom_methods.add_interaction\",\n            args: {\n                doc:{\n                    doctype: \"Interaction Master\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    result: c.result,\n                    person_interacted_with: c.person_interacted_with,\n\n     //                responce_reson: c.responce_reson,\n                    next_action_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    // result: c.result,\n                    next_action_by: c.next_action_by,\n                    next_action_task: c.comment,\n                    remakrs: c.remarks,\n                    responsible: c.responsible\n                    // next_date\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction master record created\");\n            }\n        });\n    //end interaction master\n//create todo\nconsole.log(c.create_task);\n    if(c.create_task==true){\n        frappe.call({\n                        method: \"shopchemical.custom_methods.create_todo\",\n                        args: {\n                            owner: c.next_action_by,\n                            assigned_by: c.responsible,\n                            description: c.comment,\n                            date: c.next_date,\n                            reference_name: frm.doc.name,\n                            reference_type: frm.doc.doctype\n                        }\n                    })\n    }\n//end of create todo\n\n    return frappe.call({\n            method: \"frappe.desk.form.utils.add_comment\",\n            args: {\n                doc:{\n                    doctype: \"Communication\",\n                    communication_type: \"Comment\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    comment: \"cmnt\",\n                    subject: \"cmnt\",\n                    content: cmnt,\n                    responce_reson: c.responce_reson,\n                    next_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    result: c.result,\n                    next_action_by: c.next_action_by,\n                    reference_owner: frm.doc.owner,\n                    comment_by: user,\n                    user: user,\n                    sender_full_name:user_fullname,\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction Submited Successfully\");\n                        cur_frm.reload_doc();\n            if (cur_frm) {\n                        if (cur_frm.docname && (frappe.last_edited_communication[cur_frm.doctype] || {})[cur_frm.docname]) {\n                            delete frappe.last_edited_communication[cur_frm.doctype][cur_frm.docname];\n                        }\n                    }\n            }\n        });\n},\n'Add Interaction',\n'Submit','Add Interaction', \"btn-default\"\n)\n});\n\n                        // frm.refresh();\n\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Opportunity", 
  "modified": "2017-04-10 09:45:53.741429", 
  "name": "Opportunity-Client", 
  "script": "frappe.ui.form.on(\"Opportunity\", \"refresh\", function(frm, doctype, name) {\ncur_frm.add_custom_button(__('Add Interaction'), function() {\nvar d = frappe.prompt([\n    {'fieldname': 'person_interacted_with', 'fieldtype': 'Data', 'label': 'Person Interacted with', 'reqd': 0},    \n    {label:__(\"Type of Interaction\"), fieldtype:\"Select\",'default': \"Follow Up Call\",\n                    options: [\"Cold Call\",\"Follow Up Call\",\"Mail\",\"Cold Visit\",\"Follow Up Visit\",\"Existing Customer Visit\",\"SMS or Whatsapp\",\"Skype or Webex\"],\n                    fieldname:\"type_of_interaction\"},\n    {label:__(\"Result\"), fieldtype:\"Select\", options: \n    [\"Status Quo\",\"Warmer\",\"Colder\",\"Closed Lost\",\"Closed Won\"], fieldname:\"result\"},\n    {'fieldname': 'responsible', 'fieldtype': 'Link', options:\"User\", 'default': user, 'label': 'Responsible', 'reqd': 0},\n    {'fieldname': 'create_task', 'fieldtype': 'Check', 'default': true, 'label': 'Create Task'},\n    {fieldtype: \"Column Break\"},\n\n    {'fieldname': 'next_date', 'fieldtype': 'Date', \n    'label': 'Next Action Date', 'default': frappe.datetime.add_days(frappe.datetime.nowdate(),7), 'reqd': 0},\n    {'fieldname': 'next_action_by', 'fieldtype': 'Link', options:\"User\", 'default': user,'label': 'Next Action By', 'reqd': 0},\n    {'fieldname': 'comment', 'fieldtype': 'Text', 'label': 'Next Action Task', 'reqd': 1},\n    {fieldtype: \"Section Break\"},\n\n    {'fieldname': 'remarks', 'fieldtype': 'Text Editor', 'label': 'Remarks', 'reqd': 1} \n\n\n],\nfunction(values){\n    var c = d.get_values()\n    var cmnt = \"Person Interacted with: \"+ c.person_interacted_with\n               +\"<br>Type of Interaction: \"+ c.type_of_interaction\n               +\"<br>Result: \"+ c.result \n               +\"<br>Next Action Date: \" +c.next_date \n               +\"<br>Next Action By: \"+ c.next_action_by \n               + \"<br>Next Action Task: \"+c.comment \n               + \"<br>Responsible: \"+c.responsible \n               + \"<br>Remarks: \"+c.remarks\n\n                \n    var me = frm.doc\n    // start interaction master\n       frappe.call({\n            method: \"shopchemical.custom_methods.add_interaction\",\n            args: {\n                doc:{\n                    doctype: \"Interaction Master\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    result: c.result,\n                    person_interacted_with: c.person_interacted_with,\n\n     //                responce_reson: c.responce_reson,\n                    next_action_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    // result: c.result,\n                    next_action_by: c.next_action_by,\n                    next_action_task: c.comment,\n                    remakrs: c.remarks,\n                    responsible: c.responsible\n                    // next_date\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction master record created\");\n            }\n        });\n    //end interaction master\n//create todo\nconsole.log(c.create_task);\n    if(c.create_task==true){\n        frappe.call({\n                        method: \"shopchemical.custom_methods.create_todo\",\n                        args: {\n                            owner: c.next_action_by,\n                            assigned_by: c.responsible,\n                            description: c.comment,\n                            date: c.next_date,\n                            reference_name: frm.doc.name,\n                            reference_type: frm.doc.doctype\n                        }\n                    })\n    }\n//end of create todo\n\n    return frappe.call({\n            method: \"frappe.desk.form.utils.add_comment\",\n            args: {\n                doc:{\n                    doctype: \"Communication\",\n                    communication_type: \"Comment\",\n                    reference_doctype: frm.doc.doctype,\n                    reference_name: frm.doc.name,\n                    comment: \"cmnt\",\n                    subject: \"cmnt\",\n                    content: cmnt,\n                    responce_reson: c.responce_reson,\n                    next_date: c.next_date,\n                    type_of_interaction: c.type_of_interaction,\n                    result: c.result,\n                    next_action_by: c.next_action_by,\n                    reference_owner: frm.doc.owner,\n                    comment_by: user,\n                    user: user,\n                    sender_full_name:user_fullname,\n                }\n            },\n            callback: function(r) {\n                        msgprint(\"Interaction Submited Successfully\");\n                        cur_frm.reload_doc();\n            if (cur_frm) {\n                        if (cur_frm.docname && (frappe.last_edited_communication[cur_frm.doctype] || {})[cur_frm.docname]) {\n                            delete frappe.last_edited_communication[cur_frm.doctype][cur_frm.docname];\n                        }\n                    }\n            }\n        });\n},\n'Add Interaction',\n'Submit','Add Interaction', \"btn-default\"\n)\n});\n\n                        // frm.refresh();\n\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Request for Quotation", 
  "modified": "2017-03-17 09:32:04.063774", 
  "name": "Request for Quotation-Client", 
  "script": "Date.prototype.getMonthName = function(lang) {\n    lang = lang && (lang in Date.locale) ? lang : 'en';\n    return Date.locale[lang].month_names[this.getMonth()];\n};\n\nDate.prototype.getMonthNameShort = function(lang) {\n    lang = lang && (lang in Date.locale) ? lang : 'en';\n    return Date.locale[lang].month_names_short[this.getMonth()];\n};\n\nDate.locale = {\n    en: {\n       month_names: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n       month_names_short: ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC']\n    }\n};\n\nfrappe.ui.form.on(\"Request for Quotation\", \"validate\", function(frm) {\n\tabbr_series = 'aa'\n\tfrappe.call({\n\t        method: \"frappe.client.get_value\",\n                async:false,\n\t        args: {\n\t            doctype: \"Company\",\n\t            fieldname: \"abbr_series\",\n\t            filters: { name: cur_frm.doc.company },\n\t        },\n\t       \tcallback: function(res){\n\t          \tif (res && res.message){\n\t\t\t\t\t\tabbr_series=res.message['abbr_series']\n                          \n\t           \t}\n\t       \t}  \t\n\t    });\n\tvar ymd = frm.doc.transaction_date;\n\tvar yy = ymd.substring(2,4);\n\tvar mm = ymd.substring(5,7);\n\tvar d = new Date(cur_frm.doc.transaction_date)\n\tvar ym = \"CT\"+abbr_series+\"RFQ\"+yy+ d.getMonthNameShort() + \"-.###\";\n\tfrm.set_value(\"naming_series\", ym);\n})", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Production Order", 
  "modified": "2017-03-17 09:47:18.359423", 
  "name": "Production Order-Client", 
  "script": "Date.prototype.getMonthName = function(lang) {\n    lang = lang && (lang in Date.locale) ? lang : 'en';\n    return Date.locale[lang].month_names[this.getMonth()];\n};\n\nDate.prototype.getMonthNameShort = function(lang) {\n    lang = lang && (lang in Date.locale) ? lang : 'en';\n    return Date.locale[lang].month_names_short[this.getMonth()];\n};\n\nDate.locale = {\n    en: {\n       month_names: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n       month_names_short: ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC']\n    }\n};\n\nfrappe.ui.form.on(\"Production Order\", \"validate\", function(frm) {\n\tabbr_series = 'aa'\n\tfrappe.call({\n\t        method: \"frappe.client.get_value\",\n                async:false,\n\t        args: {\n\t            doctype: \"Company\",\n\t            fieldname: \"abbr_series\",\n\t            filters: { name: cur_frm.doc.company },\n\t        },\n\t       \tcallback: function(res){\n\t          \tif (res && res.message){\n\t\t\t\t\t\tabbr_series=res.message['abbr_series']\n                          \n\t           \t}\n\t       \t}  \t\n\t    });\n\tvar ymd = frm.doc.planned_start_date;\n\tvar yy = ymd.substring(2,4);\n\tvar mm = ymd.substring(5,7);\n\tvar d = new Date(cur_frm.doc.planned_start_date)\n\tvar ym = \"CT\"+abbr_series+\"PRO\"+yy+ d.getMonthNameShort() + \"-.###\";\n\tfrm.set_value(\"naming_series\", ym);\n})", 
  "script_type": "Client"
 }
]